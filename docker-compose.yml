version: "3.8"

services:
  # test-db:
  #   image: postgres:16.1
  #   container_name: test-db
  #   env_file:
  #     - .env
  #   environment:
  #     POSTGRES_USER: ${TEST_DB_USER}
  #     POSTGRES_PASSWORD: ${TEST_DB_PASSWORD}
  #     POSTGRES_DB: ${TEST_DB_NAME}
  #   ports:
  #     - ${TEST_DB_PORT}:5432
  #   networks:
  #     - backend

  postgres-db:
    image: postgres:16.1
    volumes:
      - em_postgres_data:/var/lib/postgresql/data/
    container_name: postgres-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${DB_PORT}:5432
    networks:
      - backend

  redis:
    image: redis:7-alpine
    networks:
      - backend

  backend:
    container_name: empath-backend
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    image: empath-backend
#    volumes:
#      - .:/backend #in container folder
    ports:
      - "8000:8000"
    depends_on:
      - postgres-db
      - redis
      # - test-db
    environment:
      DB_HOST: postgres-db
    entrypoint: ["/backend/docker/app.sh"]
    networks:
      - backend

#  celery_worker:
#    container_name: celery-worker
#    env_file:
#      - .env
#    build:
#      context: .
#      dockerfile: Dockerfile
#    image: empath-celery-worker
#    volumes:
#      - .:backend #in container folder
#    depends_on:
#      - postgres-db
#      - redis
#    environment:
#      DB_HOST: postgres-db
#    entrypoint: ["/backend/docker/celery_worker_start.sh"]
#    networks:
#      - backend
#
#  celery_beat:
#    container_name: celery-beat
#    env_file:
#      - .env
#    build:
#      context: .
#      dockerfile: Dockerfile
#    image: empath-celery-beat
#    volumes:
#      - .:backend #in container folder
#    depends_on:
#      - postgres-db
#      - redis
#    environment:
#      DB_HOST: postgres-db
#    entrypoint: ["/backend/docker/celery_beat_start.sh" ]
#    networks:
#      - backend
#
#  celery_flower:
#    container_name: celery-flower
#    env_file:
#      - .env
#    build:
#      context: .
#      dockerfile: Dockerfile
#    image: empath-celery-flower
#    volumes:
#      - .:backend #in container folder
#    ports:
#      - "5555:5555"
#    depends_on:
#      - postgres-db
#      - redis
#    environment:
#      DB_HOST: postgres-db
#    entrypoint: ["/backend/docker/celery_flower_start.sh" ]
#    networks:
#      - backend


networks:
  backend:
    driver: bridge

volumes:
  em_postgres_data:

# TODO make celery and redis and celery_beat and flower container
# TODO celery tools running shell script and autoreload
# TODO make diff running mode
# TODO run test before running app container